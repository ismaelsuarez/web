name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8

    - name: Setup Node.js 18.x
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'pnpm'

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Generate Prisma client
      run: pnpm --filter backend db:generate

    # ... (aquí irían los demás pasos de linting, type-check, format-check, tests unitarios y build)
    - name: Lint backend
      run: pnpm --filter backend lint
    - name: Lint frontend
      run: pnpm --filter frontend lint
    - name: Type check backend
      run: pnpm --filter backend type-check
    - name: Type check frontend
      run: pnpm --filter frontend type-check
    - name: Format check
      run: pnpm --filter backend format --check && pnpm --filter frontend format --check
    - name: Run backend tests
      run: pnpm --filter backend test
    - name: Run frontend tests
      run: pnpm --filter frontend test:run
    - name: Build projects
      run: pnpm turbo build


  e2e-tests:
    runs-on: ubuntu-latest
    needs: test-and-build
    env:
      DATABASE_URL: "postgresql://postgres:postgres@localhost:5432/ecommerce_staging?schema=public"
      VITE_API_URL: "http://localhost:3001"
      JWT_ACCESS_SECRET: "test-secret-access"
      JWT_REFRESH_SECRET: "test-secret-refresh"
      NODE_ENV: "test"

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8

    - name: Setup Node.js 18.x
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'pnpm'

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Generate Prisma client
      run: pnpm --filter backend db:generate

    - name: Start services with Docker Compose
      run: docker compose -f docker-compose.staging.yml up --build -d --wait

    - name: Debug - Show Docker container status
      run: docker compose -f docker-compose.staging.yml ps

    - name: Debug - Show Docker container logs
      if: failure()
      run: docker compose -f docker-compose.staging.yml logs

    - name: Wait for backend internal startup (e.g., db push in start.sh)
      run: sleep 10

    - name: Apply Prisma schema (staging)
      run: pnpm --filter backend db:push

    - name: Run E2E seed
      run: pnpm --filter backend db:seed:e2e

    - name: Install Playwright browsers
      run: pnpm --filter frontend exec playwright install --with-deps

    - name: Run E2E tests
      run: pnpm --filter frontend test:e2e

    - name: Upload Playwright report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: playwright-report
        path: apps/frontend/playwright-report/
        retention-days: 30

    - name: Stop services
      if: always()
      run: docker compose -f docker-compose.staging.yml down
          